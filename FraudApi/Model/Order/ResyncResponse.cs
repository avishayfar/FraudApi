/* 
 * order
 *
 * Enables omni-channel persistence and interaction for selling contexts.
 *
 * OpenAPI spec version: 3.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;


namespace FraudAPI.Model.Order
{
    /// <summary>
    /// Response containing all unacknowledged orders for the specified enterprise unit id
    /// </summary>
    [DataContract]
    public partial class ResyncResponse :  IEquatable<ResyncResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ResyncResponse" /> class.
        /// </summary>
        /// <param name="Orders">List of unacknowledged orders for the specified enterprise unit id.</param>
        /// <param name="TotalResults">The total count of unacknowledged orders for the specified enterprise unit id.</param>
        /// <param name="TotalPages">The total number of pages.</param>
        /// <param name="PageNumber">The page number of the response.</param>
        /// <param name="LastPage">Last page indicator.</param>
        public ResyncResponse(List<OrderViewData> Orders = default(List<OrderViewData>), long? TotalResults = default(long?), int? TotalPages = default(int?), int? PageNumber = default(int?), bool? LastPage = default(bool?))
        {
            this.Orders = Orders;
            this.TotalResults = TotalResults;
            this.TotalPages = TotalPages;
            this.PageNumber = PageNumber;
            this.LastPage = LastPage;
        }
        
        /// <summary>
        /// List of unacknowledged orders for the specified enterprise unit id
        /// </summary>
        /// <value>List of unacknowledged orders for the specified enterprise unit id</value>
        [DataMember(Name="orders", EmitDefaultValue=false)]
        public List<OrderViewData> Orders { get; set; }

        /// <summary>
        /// The total count of unacknowledged orders for the specified enterprise unit id
        /// </summary>
        /// <value>The total count of unacknowledged orders for the specified enterprise unit id</value>
        [DataMember(Name="totalResults", EmitDefaultValue=false)]
        public long? TotalResults { get; set; }

        /// <summary>
        /// The total number of pages
        /// </summary>
        /// <value>The total number of pages</value>
        [DataMember(Name="totalPages", EmitDefaultValue=false)]
        public int? TotalPages { get; set; }

        /// <summary>
        /// The page number of the response
        /// </summary>
        /// <value>The page number of the response</value>
        [DataMember(Name="pageNumber", EmitDefaultValue=false)]
        public int? PageNumber { get; set; }

        /// <summary>
        /// Last page indicator
        /// </summary>
        /// <value>Last page indicator</value>
        [DataMember(Name="lastPage", EmitDefaultValue=false)]
        public bool? LastPage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ResyncResponse {\n");
            sb.Append("  Orders: ").Append(Orders).Append("\n");
            sb.Append("  TotalResults: ").Append(TotalResults).Append("\n");
            sb.Append("  TotalPages: ").Append(TotalPages).Append("\n");
            sb.Append("  PageNumber: ").Append(PageNumber).Append("\n");
            sb.Append("  LastPage: ").Append(LastPage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ResyncResponse);
        }

        /// <summary>
        /// Returns true if ResyncResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ResyncResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ResyncResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Orders == input.Orders ||
                    this.Orders != null &&
                    this.Orders.SequenceEqual(input.Orders)
                ) && 
                (
                    this.TotalResults == input.TotalResults ||
                    (this.TotalResults != null &&
                    this.TotalResults.Equals(input.TotalResults))
                ) && 
                (
                    this.TotalPages == input.TotalPages ||
                    (this.TotalPages != null &&
                    this.TotalPages.Equals(input.TotalPages))
                ) && 
                (
                    this.PageNumber == input.PageNumber ||
                    (this.PageNumber != null &&
                    this.PageNumber.Equals(input.PageNumber))
                ) && 
                (
                    this.LastPage == input.LastPage ||
                    (this.LastPage != null &&
                    this.LastPage.Equals(input.LastPage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Orders != null)
                    hashCode = hashCode * 59 + this.Orders.GetHashCode();
                if (this.TotalResults != null)
                    hashCode = hashCode * 59 + this.TotalResults.GetHashCode();
                if (this.TotalPages != null)
                    hashCode = hashCode * 59 + this.TotalPages.GetHashCode();
                if (this.PageNumber != null)
                    hashCode = hashCode * 59 + this.PageNumber.GetHashCode();
                if (this.LastPage != null)
                    hashCode = hashCode * 59 + this.LastPage.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
